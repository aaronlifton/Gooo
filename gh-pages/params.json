{"tagline":"Go lang web app framework - straightforward, no-magic, web development","body":"# Gooo\r\n\r\n```\r\n   _____\r\n  / ____|\r\n | |  __  ___   ___   ___\r\n | | |_ |/ _ \\ / _ \\ / _ \\\r\n | |__| | (_) | (_) | (_) |\r\n  \\_____|\\___/ \\___/ \\___/\r\n```\r\n\r\nPronunciation: */ɡoʊʊʊ/*\r\n\r\nGo lang web app \"framework\" showcasing straightforward, no-magic, web development with the [Go language](http://www.golang.org). Includes batch template processing and interaction with postgresql databases, and Model-View architecture.\r\n\r\n\r\n## Philosophy\r\n* Anti-magic\r\n* So simple, that it's complex.\r\n* So complex, that it works.\r\n* If it doesn't work, publish it.\r\n\r\n## Modular architecture\r\n* model\r\n  * `struct` type\r\n  * no special tags or fields, models are just Go structs\r\n  * business logic - straightforward DB methods to be used in the view module\r\n* view\r\n * parses templates in `tmpl/` folder and defines how they are rendered\r\n  * uses [`html/template`](http://golang.org/pkg/html/template/) to parse and render\r\n  * fetches rows from database as type Model interfaces\r\n* router\r\n  * handles dynamic and static routes, request methods, main handler matches the request URL against the routes\r\n  * middleware filters for restful routes\r\n* introspection\r\n  * models implement `interface{}` and `[]interface{}` types\r\n  * Go's dynamic feature is interface type conversion, generally checked at runtime\r\n  * Interface -> JSON   `interface{} -> []byte`\r\n  * Interface -> Struct `[]interface{}` -> `map[string]interface{}`\r\n  *\r\n  * GetStructValues     `interface{} -> []interface{}`\r\n  * InterfaceName:      `interface{} -> string`\r\n* util\r\n  * generic error handler `HandlerErr(err error)`\r\n\r\n---\r\n\r\n![Martin Odersky](http://i.imgur.com/jB8aa.jpg?1)\r\n\r\n*Tested and approved by Typeunsafe&copy; Corporation*\r\n\r\n---\r\n\r\n## Tell me more...\r\n### Why Go?\r\n* [Gophers](http://golang.org/doc/gopher/frontpage.png)\r\n* Hip\r\n* New\r\n* Unproven\r\n\r\n### Is it good?\r\nAre you good?\r\n\r\n## Let's Gooo test the example blog app\r\n* resolve dependencies\r\n  * go get https://github.com/bmizerany/pq (pure Go postgres driver for `database/sql`)\r\n  * don't want to use postgresql? Use it anyway.\r\n    * Sign up for a free Heroku Postgres account [here](https://postgres.heroku.com/).\r\n    * Create a database and save the connection params for the next step.\r\n* configure the database connection variable `dpParams` in the model package (`model/model.go`)\r\n* `go install` iff first build\r\n* `go build && ./gooo`\r\n* [http://localhost:8080](http://localhost:8080)\r\n* Gooo celebrate\r\n* Gooo outside\r\n\r\n## Let's Gooo write your own Gooo app\r\n* resolve dependencies\r\n  * go get https://github.com/bmizerany/pq (pure Go postgres driver for `database/sql`)\r\n  * don't want to use postgresql? Use it anyway.\r\n    * Sign up for a free Heroku Postgres account [here](https://postgres.heroku.com/).\r\n    * Create a database and save the connection params for the next step.\r\n* define your model interfaces and configure the database connection in the model package (`model/model.go`)\r\n  * implement your model interface types with anonymous `BaseModel` field\r\n    * use `` `json:\"-\"` `` for type safety and Go lang future proofing\r\n  * implement functions and variables available to all models with anonymous `BaseModel` field in the `Model` interface type\r\n* define your views as request handler functions in the view package (`view/view.go`)\r\n* write your templates in `tmpl/` ([Go text/template syntax](http://golang.org/pkg/text/template/))\r\n* define routes in main package gooo.go\r\n* `go install` iff first build\r\n* `go build && ./gooo`\r\n* [http://localhost:8080](http://localhost:8080)\r\n* Gooo celebrate\r\n* Gooo outside\r\n\r\n## Gooo read these\r\n* [text/template](http://golang.org/pkg/text/template/)\r\n* [html/template](http://golang.org/pkg/html/template/)\r\n* [net/http](http://golang.org/pkg/net/http/)\r\n* [database/sql](http://golang.org/pkg/database/sql/)\r\n* [encoding/json](http://golang.org/pkg/encoding/json/)\r\n\r\n- - -\r\n\r\n<p align=\"center\">\r\n  <img src=\"http://i.imgur.com/NSscm.jpg\" alt=\"Gopher\"/>\r\n</p>\r\n\r\n\r\n- - -\r\n\r\nEnjoy,\r\n\r\n  \\- Aaron Lifton\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-37864038-1","name":"Gooo"}